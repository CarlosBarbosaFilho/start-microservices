
version: "3"
services:
  postgres:
    image: postgres:9.6
    container_name: "microservice"
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - TZ=GMT
    volumes:
      - "./data/postgres:/var/lib/postgresql/data"
    ports:
      - 5432:5432
    networks:
      - postgres

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - 9411:9411
    networks:
      - spring

  rabbitmq:
    image: rabbitmq:3.9.11-management-alpine
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - spring

  eureka-server:
    image: carlosbarbosafilho/eureka-server:latest
    container_name: eureka-server
    ports:
      - 8761:8761
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
    depends_on:
      - zipkin

  api-gateway:
    image: carlosbarbosafilho/api-gateway:latest
    container_name: api-gateway
    ports:
      - 8083:8083
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
    depends_on:
      - zipkin
      - eureka-server
  microservice-customer:
    image: carlosbarbosafilho/customer:latest
    container_name: customer
    ports:
      - 8082:8082
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
      - postgres
    depends_on:
      - zipkin
      - postgres
      - rabbitmq
  microservice-fraud:
    image: carlosbarbosafilho/fraud:latest
    container_name: fraud
    ports:
      - 8081:8081
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
      - postgres
    depends_on:
      - zipkin
      - rabbitmq
      - postgres
  microservice-notification:
    image: carlosbarbosafilho/notification-service:latest
    container_name: notification-service
    ports:
      - 8084:8084
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
      - postgres
    depends_on:
      - zipkin
      - postgres
      - rabbitmq
networks:
  spring:
    driver: bridge
  postgres:
    driver: bridge